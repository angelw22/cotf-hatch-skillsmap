{"ast":null,"code":"var _jsxFileName = \"/Users/angel/Documents/skills_map/src/components/DiagramButtons.js\";\nimport React from 'react';\nimport './DiagramButtons.css';\n\nconst DiagramButton = ({\n  onInit,\n  onUpdateColor,\n  onAddNode\n}) => {\n  return React.createElement(\"div\", {\n    className: \"centered-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"inline-element\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onInit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Init diagram\")), React.createElement(\"div\", {\n    className: \"inline-element\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onUpdateColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Update node color\")), React.createElement(\"div\", {\n    className: \"inline-element\",\n    onClick: onAddNode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Add node with selected node(s) as parent(s)\")));\n};\n\nexport default DiagramButton;","map":{"version":3,"sources":["/Users/angel/Documents/skills_map/src/components/DiagramButtons.js"],"names":["React","DiagramButton","onInit","onUpdateColor","onAddNode"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,aAAV;AAAyBC,EAAAA;AAAzB,CAAD,KAA0C;AAC5D,SACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEF,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,EAMI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEC,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CANJ,EAWI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,OAAO,EAAEC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDADJ,CAXJ,CADJ;AAiBH,CAlBD;;AAoBA,eAAeH,aAAf","sourcesContent":["import React from 'react';\nimport './DiagramButtons.css';\n\nconst DiagramButton = ({ onInit, onUpdateColor, onAddNode }) => {\n    return (\n        <div className=\"centered-container\">\n            <div className=\"inline-element\">\n                <button type=\"button\" onClick={onInit}>\n                    Init diagram\n                </button>\n            </div>\n            <div className=\"inline-element\">\n                <button type=\"button\" onClick={onUpdateColor}>\n                    Update node color\n                </button>\n            </div>\n            <div className=\"inline-element\" onClick={onAddNode}>\n                <button type=\"button\">Add node with selected node(s) as parent(s)</button>\n            </div>\n        </div>\n    );\n};\n\nexport default DiagramButton;"]},"metadata":{},"sourceType":"module"}