{"ast":null,"code":"var _jsxFileName = \"/Users/angel/Documents/skills_map/src/components/navBar.js\";\nimport React from 'react';\nimport Swiper from 'react-id-swiper';\nimport 'swiper/css/swiper.css';\nimport './navBar.scss';\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      params: {\n        pagination: {\n          el: '.swiper-pagination',\n          type: 'progressbar'\n        },\n        slidesPerView: 3,\n        spaceBetween: 0,\n        loop: true,\n        navigation: {\n          nextEl: '.swiper-button-next',\n          prevEl: '.swiper-button-prev'\n        } // effect: 'coverflow',\n        // grabCursor: true,\n        // centeredSlides: true,\n        // slidesPerView: 'auto',\n        // coverflowEffect: {\n        // \trotate: -30,\n        // \tstretch: 0,\n        // \tdepth: 300,\n        // \tmodifier: 1,\n        // \tslideShadows: false\n        // },\n        // pagination: {\n        // \tel: '.swiper-pagination',\n        // \tclickable: true\n        // },\n        // navigation: {\n        // \tnextEl: '.swiper-button-next',\n        // \tprevEl: '.swiper-button-prev'\n        // }\n\n      },\n      swiper: '',\n      active: ''\n    };\n    this.updateSwiper = this.updateSwiper.bind(this);\n  }\n\n  updateSwiper(s) {\n    this.setState({\n      swiper: s\n    }); // console.log('swiper is ', s)\n\n    s.on('transitionEnd', () => {\n      // console.log(s.slides[s.activeIndex + 1].innerHTML)\n      this.setState({\n        active: s.slides[s.activeIndex + 1].innerHTML + ' Track'\n      });\n      this.changeTopic(this.state.active);\n    });\n  }\n\n  changeTopic() {\n    this.props.updateTopic(this.state.active);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"navContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Swiper, Object.assign({}, this.state.params, {\n      getSwiper: s => {\n        this.updateSwiper(s);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), this.props.titles.map((item, index) => React.createElement(\"div\", {\n      className: \"navItems\",\n      key: index,\n      id: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, item.replace(\" Track\", \"\"))))));\n  }\n\n}\n\nexport default NavBar;","map":{"version":3,"sources":["/Users/angel/Documents/skills_map/src/components/navBar.js"],"names":["React","Swiper","NavBar","Component","constructor","props","state","params","pagination","el","type","slidesPerView","spaceBetween","loop","navigation","nextEl","prevEl","swiper","active","updateSwiper","bind","s","setState","on","slides","activeIndex","innerHTML","changeTopic","updateTopic","render","titles","map","item","index","replace"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAO,uBAAP;AACA,OAAO,eAAP;;AAGA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACZC,MAAAA,MAAM,EAAG;AACRC,QAAAA,UAAU,EAAE;AACXC,UAAAA,EAAE,EAAE,oBADO;AAEXC,UAAAA,IAAI,EAAE;AAFK,SADJ;AAKRC,QAAAA,aAAa,EAAE,CALP;AAMRC,QAAAA,YAAY,EAAE,CANN;AAORC,QAAAA,IAAI,EAAE,IAPE;AAQRC,QAAAA,UAAU,EAAE;AACXC,UAAAA,MAAM,EAAE,qBADG;AAEXC,UAAAA,MAAM,EAAE;AAFG,SARJ,CAYR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA9BQ,OADG;AAiCZC,MAAAA,MAAM,EAAE,EAjCI;AAkCZC,MAAAA,MAAM,EAAE;AAlCI,KAAb;AAqCA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA;;AAEDD,EAAAA,YAAY,CAACE,CAAD,EAAI;AACf,SAAKC,QAAL,CAAc;AAACL,MAAAA,MAAM,EAAEI;AAAT,KAAd,EADe,CAEf;;AAEAA,IAAAA,CAAC,CAACE,EAAF,CAAK,eAAL,EAAsB,MAAM;AAC3B;AACA,WAAKD,QAAL,CAAc;AAACJ,QAAAA,MAAM,EAAEG,CAAC,CAACG,MAAF,CAASH,CAAC,CAACI,WAAF,GAAgB,CAAzB,EAA4BC,SAA5B,GAAwC;AAAjD,OAAd;AACA,WAAKC,WAAL,CAAiB,KAAKrB,KAAL,CAAWY,MAA5B;AACA,KAJD;AAKA;;AAEDS,EAAAA,WAAW,GAAG;AACb,SAAKtB,KAAL,CAAWuB,WAAX,CAAuB,KAAKtB,KAAL,CAAWY,MAAlC;AACA;;AAGDW,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD,oBAAY,KAAKvB,KAAL,CAAWC,MAAvB;AAA+B,MAAA,SAAS,EAAGc,CAAD,IAAO;AAAC,aAAKF,YAAL,CAAkBE,CAAlB;AAAqB,OAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,KAAKhB,KAAL,CAAWyB,MAAX,CAAkBC,GAAlB,CAAsB,CAACC,IAAD,EAAOC,KAAP,KACvB;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAEA,KAA/B;AAAsC,MAAA,EAAE,EAAED,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiDA,IAAI,CAACE,OAAL,CAAa,QAAb,EAAuB,EAAvB,CAAjD,CADC,CADF,CADA,CADD,CADD;AAUA;;AAvEmC;;AA2ErC,eAAehC,MAAf","sourcesContent":["import React from 'react';\nimport Swiper from 'react-id-swiper';\nimport 'swiper/css/swiper.css';\nimport './navBar.scss'\n\n\nclass NavBar extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tparams : {\n\t\t\t\tpagination: {\n\t\t\t\t\tel: '.swiper-pagination',\n\t\t\t\t\ttype: 'progressbar',\n\t\t\t\t},\n\t\t\t\tslidesPerView: 3,\n\t\t\t\tspaceBetween: 0,\n\t\t\t\tloop: true,\n\t\t\t\tnavigation: {\n\t\t\t\t\tnextEl: '.swiper-button-next',\n\t\t\t\t\tprevEl: '.swiper-button-prev'\n\t\t\t\t}\n\t\t\t\t// effect: 'coverflow',\n\t\t\t\t// grabCursor: true,\n\t\t\t\t// centeredSlides: true,\n\t\t\t\t// slidesPerView: 'auto',\n\t\t\t\t// coverflowEffect: {\n\t\t\t\t// \trotate: -30,\n\t\t\t\t// \tstretch: 0,\n\t\t\t\t// \tdepth: 300,\n\t\t\t\t// \tmodifier: 1,\n\t\t\t\t// \tslideShadows: false\n\t\t\t\t// },\n\t\t\t\t// pagination: {\n\t\t\t\t// \tel: '.swiper-pagination',\n\t\t\t\t// \tclickable: true\n\t\t\t\t// },\n\t\t\t\t// navigation: {\n\t\t\t\t// \tnextEl: '.swiper-button-next',\n\t\t\t\t// \tprevEl: '.swiper-button-prev'\n\t\t\t\t// }\n\t\t\t},\n\t\t\tswiper: '',\n\t\t\tactive: ''\n\t\t}\n\n\t\tthis.updateSwiper = this.updateSwiper.bind(this);\n\t}\n\n\tupdateSwiper(s) {\n\t\tthis.setState({swiper: s});\n\t\t// console.log('swiper is ', s)\n\n\t\ts.on('transitionEnd', () => {\n\t\t\t// console.log(s.slides[s.activeIndex + 1].innerHTML)\n\t\t\tthis.setState({active: s.slides[s.activeIndex + 1].innerHTML + ' Track'})\n\t\t\tthis.changeTopic(this.state.active)\n\t\t})\n\t}\n\n\tchangeTopic() {\n\t\tthis.props.updateTopic(this.state.active)\n\t}\n\t\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"navContainer\" >\n\t\t\t\t<div>\n\t\t\t\t<Swiper {...this.state.params} getSwiper={(s) => {this.updateSwiper(s)}}>\n\t\t\t\t\t{this.props.titles.map((item, index) => \n\t\t\t\t\t<div className=\"navItems\" key={index} id={item}>{item.replace(\" Track\", \"\")}</div>)}\n\t\t\t\t</Swiper>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nexport default NavBar"]},"metadata":{},"sourceType":"module"}