{"ast":null,"code":"var _jsxFileName = \"/Users/angel/Documents/skills_map/src/components/navBar.js\";\nimport React from 'react';\nimport Swiper from 'react-id-swiper';\nimport 'swiper/css/swiper.css';\nimport './navBar.scss';\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      params: {\n        slidesPerView: 3,\n        spaceBetween: 10,\n        loop: true // pagination: {\n        // \tel: '.swiper-pagination',\n        // \tclickable: true\n        // },\n        // navigation: {\n        // \tnextEl: '.swiper-button-next',\n        // \tprevEl: '.swiper-button-prev'\n        // }\n\n      },\n      swiper: ''\n    };\n    this.updateSwiper = this.updateSwiper.bind(this);\n  }\n\n  updateSwiper(s) {\n    this.setState({\n      swiper: s\n    });\n    console.log('swiper is ', s);\n    s.on('transitionEnd', () => {\n      console.log(s.slides[s.activeIndex + 1].innerHTML); // console.log(s.activeIndex, 'active index!!')\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"navContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Swiper, Object.assign({}, this.state.params, {\n      getSwiper: s => {\n        this.updateSwiper(s);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), this.props.titles.map(item => React.createElement(\"div\", {\n      className: \"navItems\",\n      id: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, item.replace(\" Track\", \"\"))))));\n  }\n\n}\n\nexport default NavBar;","map":{"version":3,"sources":["/Users/angel/Documents/skills_map/src/components/navBar.js"],"names":["React","Swiper","NavBar","Component","constructor","props","state","params","slidesPerView","spaceBetween","loop","swiper","updateSwiper","bind","s","setState","console","log","on","slides","activeIndex","innerHTML","render","titles","map","item","replace"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAO,uBAAP;AACA,OAAO,eAAP;;AAGA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACZC,MAAAA,MAAM,EAAG;AACRC,QAAAA,aAAa,EAAE,CADP;AAERC,QAAAA,YAAY,EAAE,EAFN;AAGRC,QAAAA,IAAI,EAAE,IAHE,CAIR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAXQ,OADG;AAcZC,MAAAA,MAAM,EAAE;AAdI,KAAb;AAiBA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA;;AAEDD,EAAAA,YAAY,CAACE,CAAD,EAAI;AACf,SAAKC,QAAL,CAAc;AAACJ,MAAAA,MAAM,EAAEG;AAAT,KAAd;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,CAA1B;AAEAA,IAAAA,CAAC,CAACI,EAAF,CAAK,eAAL,EAAsB,MAAM;AAC3BF,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACK,MAAF,CAASL,CAAC,CAACM,WAAF,GAAgB,CAAzB,EAA4BC,SAAxC,EAD2B,CAE3B;AACA,KAHD;AAIA;;AAGDC,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD,oBAAY,KAAKhB,KAAL,CAAWC,MAAvB;AAA+B,MAAA,SAAS,EAAGO,CAAD,IAAO;AAAC,aAAKF,YAAL,CAAkBE,CAAlB;AAAqB,OAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,KAAKT,KAAL,CAAWkB,MAAX,CAAkBC,GAAlB,CAAuBC,IAAD,IACvB;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,EAAE,EAAEA,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCA,IAAI,CAACC,OAAL,CAAa,QAAb,EAAuB,EAAvB,CAArC,CADC,CADF,CADA,CADD,CADD;AAWA;;AA/CmC;;AAmDrC,eAAexB,MAAf","sourcesContent":["import React from 'react';\nimport Swiper from 'react-id-swiper';\nimport 'swiper/css/swiper.css';\nimport './navBar.scss'\n\n\nclass NavBar extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tparams : {\n\t\t\t\tslidesPerView: 3,\n\t\t\t\tspaceBetween: 10,\n\t\t\t\tloop: true,\n\t\t\t\t// pagination: {\n\t\t\t\t// \tel: '.swiper-pagination',\n\t\t\t\t// \tclickable: true\n\t\t\t\t// },\n\t\t\t\t// navigation: {\n\t\t\t\t// \tnextEl: '.swiper-button-next',\n\t\t\t\t// \tprevEl: '.swiper-button-prev'\n\t\t\t\t// }\n\t\t\t},\n\t\t\tswiper: ''\n\t\t}\n\n\t\tthis.updateSwiper = this.updateSwiper.bind(this);\n\t}\n\n\tupdateSwiper(s) {\n\t\tthis.setState({swiper: s});\n\t\tconsole.log('swiper is ', s)\n\n\t\ts.on('transitionEnd', () => {\n\t\t\tconsole.log(s.slides[s.activeIndex + 1].innerHTML)\n\t\t\t// console.log(s.activeIndex, 'active index!!')\n\t\t})\n\t}\n\t\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"navContainer\" >\n\t\t\t\t<div>\n\t\t\t\t<Swiper {...this.state.params} getSwiper={(s) => {this.updateSwiper(s)}}>\n\t\t\t\t\t{this.props.titles.map((item) => \n\t\t\t\t\t<div className=\"navItems\" id={item}>{item.replace(\" Track\", \"\")}</div>)}\n\n\t\t\t\t</Swiper>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nexport default NavBar"]},"metadata":{},"sourceType":"module"}